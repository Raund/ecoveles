/*
 * jQuery UI Resizable 1.8.2
 *
 * Copyright (c) 2010 AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 *
 * http://docs.jquery.com/UI/Resizables
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(d){d.widget("ui.resizable",d.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:false,animate:false,animateDuration:"slow",animateEasing:"swing",aspectRatio:false,autoHide:false,containment:false,ghost:false,grid:false,handles:"e,s,se",helper:false,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1E3},_create:function(){var b=this,a=this.options;this.element.addClass("ui-resizable");d.extend(this,{_aspectRatio:!!a.aspectRatio,aspectRatio:a.aspectRatio,originalElement:this.element,
_proportionallyResizeElements:[],_helper:a.helper||a.ghost||a.animate?a.helper||"ui-resizable-helper":null});if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)){/relative/.test(this.element.css("position"))&&d.browser.opera&&this.element.css({position:"relative",top:"auto",left:"auto"});this.element.wrap(d('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),
top:this.element.css("top"),left:this.element.css("left")}));this.element=this.element.parent().data("resizable",this.element.data("resizable"));this.elementIsWrapper=true;this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")});this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0});this.originalResizeStyle=
this.originalElement.css("resize");this.originalElement.css("resize","none");this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"}));this.originalElement.css({margin:this.originalElement.css("margin")});this._proportionallyResize()}this.handles=a.handles||(!d(".ui-resizable-handle",this.element).length?"e,s,se":{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",
nw:".ui-resizable-nw"});if(this.handles.constructor==String){if(this.handles=="all")this.handles="n,e,s,w,se,sw,ne,nw";var c=this.handles.split(",");this.handles={};for(var e=0;e<c.length;e++){var g=d.trim(c[e]),f=d('<div class="ui-resizable-handle '+("ui-resizable-"+g)+'"></div>');/sw|se|ne|nw/.test(g)&&f.css({zIndex:++a.zIndex});"se"==g&&f.addClass("ui-icon ui-icon-gripsmall-diagonal-se");this.handles[g]=".ui-resizable-"+g;this.element.append(f)}}this._renderAxis=function(h){h=h||this.element;for(var i in this.handles){if(this.handles[i].constructor==
String)this.handles[i]=d(this.handles[i],this.element).show();if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var j=d(this.handles[i],this.element),l=0;l=/sw|ne|nw|se|n|s/.test(i)?j.outerHeight():j.outerWidth();j=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");h.css(j,l);this._proportionallyResize()}d(this.handles[i])}};this._renderAxis(this.element);this._handles=d(".ui-resizable-handle",this.element).disableSelection();
this._handles.mouseover(function(){if(!b.resizing){if(this.className)var h=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);b.axis=h&&h[1]?h[1]:"se"}});if(a.autoHide){this._handles.hide();d(this.element).addClass("ui-resizable-autohide").hover(function(){d(this).removeClass("ui-resizable-autohide");b._handles.show()},function(){if(!b.resizing){d(this).addClass("ui-resizable-autohide");b._handles.hide()}})}this._mouseInit()},destroy:function(){this._mouseDestroy();var b=function(c){d(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};
if(this.elementIsWrapper){b(this.element);var a=this.element;a.after(this.originalElement.css({position:a.css("position"),width:a.outerWidth(),height:a.outerHeight(),top:a.css("top"),left:a.css("left")})).remove()}this.originalElement.css("resize",this.originalResizeStyle);b(this.originalElement);return this},_mouseCapture:function(b){var a=false;for(var c in this.handles)if(d(this.handles[c])[0]==b.target)a=true;return!this.options.disabled&&a},_mouseStart:function(b){var a=this.options,c=this.element.position(),
e=this.element;this.resizing=true;this.documentScroll={top:d(document).scrollTop(),left:d(document).scrollLeft()};if(e.is(".ui-draggable")||/absolute/.test(e.css("position")))e.css({position:"absolute",top:c.top,left:c.left});d.browser.opera&&/relative/.test(e.css("position"))&&e.css({position:"relative",top:"auto",left:"auto"});this._renderProxy();c=m(this.helper.css("left"));var g=m(this.helper.css("top"));if(a.containment){c+=d(a.containment).scrollLeft()||0;g+=d(a.containment).scrollTop()||0}this.offset=
this.helper.offset();this.position={left:c,top:g};this.size=this._helper?{width:e.outerWidth(),height:e.outerHeight()}:{width:e.width(),height:e.height()};this.originalSize=this._helper?{width:e.outerWidth(),height:e.outerHeight()}:{width:e.width(),height:e.height()};this.originalPosition={left:c,top:g};this.sizeDiff={width:e.outerWidth()-e.width(),height:e.outerHeight()-e.height()};this.originalMousePosition={left:b.pageX,top:b.pageY};this.aspectRatio=typeof a.aspectRatio=="number"?a.aspectRatio:
this.originalSize.width/this.originalSize.height||1;a=d(".ui-resizable-"+this.axis).css("cursor");d("body").css("cursor",a=="auto"?this.axis+"-resize":a);e.addClass("ui-resizable-resizing");this._propagate("start",b);return true},_mouseDrag:function(b){var a=this.helper,c=this.originalMousePosition,e=this._change[this.axis];if(!e)return false;c=e.apply(this,[b,b.pageX-c.left||0,b.pageY-c.top||0]);if(this._aspectRatio||b.shiftKey)c=this._updateRatio(c,b);c=this._respectSize(c,b);this._propagate("resize",
b);a.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"});!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize();this._updateCache(c);this._trigger("resize",b,this.ui());return false},_mouseStop:function(b){this.resizing=false;var a=this.options,c=this;if(this._helper){var e=this._proportionallyResizeElements,g=e.length&&/textarea/i.test(e[0].nodeName);e=g&&d.ui.hasScroll(e[0],"left")?0:c.sizeDiff.height;
g={width:c.size.width-(g?0:c.sizeDiff.width),height:c.size.height-e};e=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null;var f=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null;a.animate||this.element.css(d.extend(g,{top:f,left:e}));c.helper.height(c.size.height);c.helper.width(c.size.width);this._helper&&!a.animate&&this._proportionallyResize()}d("body").css("cursor","auto");this.element.removeClass("ui-resizable-resizing");this._propagate("stop",
b);this._helper&&this.helper.remove();return false},_updateCache:function(b){this.offset=this.helper.offset();if(k(b.left))this.position.left=b.left;if(k(b.top))this.position.top=b.top;if(k(b.height))this.size.height=b.height;if(k(b.width))this.size.width=b.width},_updateRatio:function(b){var a=this.position,c=this.size,e=this.axis;if(b.height)b.width=c.height*this.aspectRatio;else if(b.width)b.height=c.width/this.aspectRatio;if(e=="sw"){b.left=a.left+(c.width-b.width);b.top=null}if(e=="nw"){b.top=
a.top+(c.height-b.height);b.left=a.left+(c.width-b.width)}return b},_respectSize:function(b){var a=this.options,c=this.axis,e=k(b.width)&&a.maxWidth&&a.maxWidth<b.width,g=k(b.height)&&a.maxHeight&&a.maxHeight<b.height,f=k(b.width)&&a.minWidth&&a.minWidth>b.width,h=k(b.height)&&a.minHeight&&a.minHeight>b.height;if(f)b.width=a.minWidth;if(h)b.height=a.minHeight;if(e)b.width=a.maxWidth;if(g)b.height=a.maxHeight;var i=this.originalPosition.left+this.originalSize.width,j=this.position.top+this.size.height,
l=/sw|nw|w/.test(c);c=/nw|ne|n/.test(c);if(f&&l)b.left=i-a.minWidth;if(e&&l)b.left=i-a.maxWidth;if(h&&c)b.top=j-a.minHeight;if(g&&c)b.top=j-a.maxHeight;if((a=!b.width&&!b.height)&&!b.left&&b.top)b.top=null;else if(a&&!b.top&&b.left)b.left=null;return b},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var b=this.helper||this.element,a=0;a<this._proportionallyResizeElements.length;a++){var c=this._proportionallyResizeElements[a];if(!this.borderDif){var e=[c.css("borderTopWidth"),
c.css("borderRightWidth"),c.css("borderBottomWidth"),c.css("borderLeftWidth")],g=[c.css("paddingTop"),c.css("paddingRight"),c.css("paddingBottom"),c.css("paddingLeft")];this.borderDif=d.map(e,function(f,h){f=parseInt(f,10)||0;h=parseInt(g[h],10)||0;return f+h})}d.browser.msie&&(d(b).is(":hidden")||d(b).parents(":hidden").length)||c.css({height:b.height()-this.borderDif[0]-this.borderDif[2]||0,width:b.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var b=this.options;this.elementOffset=
this.element.offset();if(this._helper){this.helper=this.helper||d('<div style="overflow:hidden;"></div>');var a=d.browser.msie&&d.browser.version<7,c=a?1:0;a=a?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+a,height:this.element.outerHeight()+a,position:"absolute",left:this.elementOffset.left-c+"px",top:this.elementOffset.top-c+"px",zIndex:++b.zIndex});this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(b,a){return{width:this.originalSize.width+
a}},w:function(b,a){return{left:this.originalPosition.left+a,width:this.originalSize.width-a}},n:function(b,a,c){return{top:this.originalPosition.top+c,height:this.originalSize.height-c}},s:function(b,a,c){return{height:this.originalSize.height+c}},se:function(b,a,c){return d.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,a,c]))},sw:function(b,a,c){return d.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,a,c]))},ne:function(b,a,c){return d.extend(this._change.n.apply(this,
arguments),this._change.e.apply(this,[b,a,c]))},nw:function(b,a,c){return d.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,a,c]))}},_propagate:function(b,a){d.ui.plugin.call(this,b,[a,this.ui()]);b!="resize"&&this._trigger(b,a,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}});d.extend(d.ui.resizable,
{version:"1.8.2"});d.ui.plugin.add("resizable","alsoResize",{start:function(){var b=d(this).data("resizable").options,a=function(c){d(c).each(function(){d(this).data("resizable-alsoresize",{width:parseInt(d(this).width(),10),height:parseInt(d(this).height(),10),left:parseInt(d(this).css("left"),10),top:parseInt(d(this).css("top"),10)})})};if(typeof b.alsoResize=="object"&&!b.alsoResize.parentNode)if(b.alsoResize.length){b.alsoResize=b.alsoResize[0];a(b.alsoResize)}else d.each(b.alsoResize,function(c){a(c)});
else a(b.alsoResize)},resize:function(){var b=d(this).data("resizable"),a=b.options,c=b.originalSize,e=b.originalPosition,g={height:b.size.height-c.height||0,width:b.size.width-c.width||0,top:b.position.top-e.top||0,left:b.position.left-e.left||0},f=function(h,i){d(h).each(function(){var j=d(this),l=d(this).data("resizable-alsoresize"),p={};d.each((i&&i.length?i:["width","height","top","left"])||["width","height","top","left"],function(n,o){if((n=(l[o]||0)+(g[o]||0))&&n>=0)p[o]=n||null});if(/relative/.test(j.css("position"))&&
d.browser.opera){b._revertToRelativePosition=true;j.css({position:"absolute",top:"auto",left:"auto"})}j.css(p)})};typeof a.alsoResize=="object"&&!a.alsoResize.nodeType?d.each(a.alsoResize,function(h,i){f(h,i)}):f(a.alsoResize)},stop:function(){var b=d(this).data("resizable");if(b._revertToRelativePosition&&d.browser.opera){b._revertToRelativePosition=false;el.css({position:"relative"})}d(this).removeData("resizable-alsoresize-start")}});d.ui.plugin.add("resizable","animate",{stop:function(b){var a=
d(this).data("resizable"),c=a.options,e=a._proportionallyResizeElements,g=e.length&&/textarea/i.test(e[0].nodeName),f=g&&d.ui.hasScroll(e[0],"left")?0:a.sizeDiff.height;g={width:a.size.width-(g?0:a.sizeDiff.width),height:a.size.height-f};f=parseInt(a.element.css("left"),10)+(a.position.left-a.originalPosition.left)||null;var h=parseInt(a.element.css("top"),10)+(a.position.top-a.originalPosition.top)||null;a.element.animate(d.extend(g,h&&f?{top:h,left:f}:{}),{duration:c.animateDuration,easing:c.animateEasing,
step:function(){var i={width:parseInt(a.element.css("width"),10),height:parseInt(a.element.css("height"),10),top:parseInt(a.element.css("top"),10),left:parseInt(a.element.css("left"),10)};e&&e.length&&d(e[0]).css({width:i.width,height:i.height});a._updateCache(i);a._propagate("resize",b)}})}});d.ui.plugin.add("resizable","containment",{start:function(){var b=d(this).data("resizable"),a=b.element,c=b.options.containment;if(a=c instanceof d?c.get(0):/parent/.test(c)?a.parent().get(0):c){b.containerElement=
d(a);if(/document/.test(c)||c==document){b.containerOffset={left:0,top:0};b.containerPosition={left:0,top:0};b.parentData={element:d(document),left:0,top:0,width:d(document).width(),height:d(document).height()||document.body.parentNode.scrollHeight}}else{var e=d(a),g=[];d(["Top","Right","Left","Bottom"]).each(function(i,j){g[i]=m(e.css("padding"+j))});b.containerOffset=e.offset();b.containerPosition=e.position();b.containerSize={height:e.innerHeight()-g[3],width:e.innerWidth()-g[1]};c=b.containerOffset;
var f=b.containerSize.height,h=b.containerSize.width;h=d.ui.hasScroll(a,"left")?a.scrollWidth:h;f=d.ui.hasScroll(a)?a.scrollHeight:f;b.parentData={element:a,left:c.left,top:c.top,width:h,height:f}}}},resize:function(b){var a=d(this).data("resizable"),c=a.options,e=a.containerOffset,g=a.position;b=a._aspectRatio||b.shiftKey;var f={top:0,left:0},h=a.containerElement;if(h[0]!=document&&/static/.test(h.css("position")))f=e;if(g.left<(a._helper?e.left:0)){a.size.width+=a._helper?a.position.left-e.left:
a.position.left-f.left;if(b)a.size.height=a.size.width/c.aspectRatio;a.position.left=c.helper?e.left:0}if(g.top<(a._helper?e.top:0)){a.size.height+=a._helper?a.position.top-e.top:a.position.top;if(b)a.size.width=a.size.height*c.aspectRatio;a.position.top=a._helper?e.top:0}a.offset.left=a.parentData.left+a.position.left;a.offset.top=a.parentData.top+a.position.top;c=Math.abs((a._helper?a.offset.left-f.left:a.offset.left-f.left)+a.sizeDiff.width);e=Math.abs((a._helper?a.offset.top-f.top:a.offset.top-
e.top)+a.sizeDiff.height);g=a.containerElement.get(0)==a.element.parent().get(0);f=/relative|absolute/.test(a.containerElement.css("position"));if(g&&f)c-=a.parentData.left;if(c+a.size.width>=a.parentData.width){a.size.width=a.parentData.width-c;if(b)a.size.height=a.size.width/a.aspectRatio}if(e+a.size.height>=a.parentData.height){a.size.height=a.parentData.height-e;if(b)a.size.width=a.size.height*a.aspectRatio}},stop:function(){var b=d(this).data("resizable"),a=b.options,c=b.containerOffset,e=b.containerPosition,
g=b.containerElement,f=d(b.helper),h=f.offset(),i=f.outerWidth()-b.sizeDiff.width;f=f.outerHeight()-b.sizeDiff.height;b._helper&&!a.animate&&/relative/.test(g.css("position"))&&d(this).css({left:h.left-e.left-c.left,width:i,height:f});b._helper&&!a.animate&&/static/.test(g.css("position"))&&d(this).css({left:h.left-e.left-c.left,width:i,height:f})}});d.ui.plugin.add("resizable","ghost",{start:function(){var b=d(this).data("resizable"),a=b.options,c=b.size;b.ghost=b.originalElement.clone();b.ghost.css({opacity:0.25,
display:"block",position:"relative",height:c.height,width:c.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof a.ghost=="string"?a.ghost:"");b.ghost.appendTo(b.helper)},resize:function(){var b=d(this).data("resizable");b.ghost&&b.ghost.css({position:"relative",height:b.size.height,width:b.size.width})},stop:function(){var b=d(this).data("resizable");b.ghost&&b.helper&&b.helper.get(0).removeChild(b.ghost.get(0))}});d.ui.plugin.add("resizable","grid",{resize:function(){var b=
d(this).data("resizable"),a=b.options,c=b.size,e=b.originalSize,g=b.originalPosition,f=b.axis;a.grid=typeof a.grid=="number"?[a.grid,a.grid]:a.grid;var h=Math.round((c.width-e.width)/(a.grid[0]||1))*(a.grid[0]||1);a=Math.round((c.height-e.height)/(a.grid[1]||1))*(a.grid[1]||1);if(/^(se|s|e)$/.test(f)){b.size.width=e.width+h;b.size.height=e.height+a}else if(/^(ne)$/.test(f)){b.size.width=e.width+h;b.size.height=e.height+a;b.position.top=g.top-a}else{if(/^(sw)$/.test(f)){b.size.width=e.width+h;b.size.height=
e.height+a}else{b.size.width=e.width+h;b.size.height=e.height+a;b.position.top=g.top-a}b.position.left=g.left-h}}});var m=function(b){return parseInt(b,10)||0},k=function(b){return!isNaN(parseInt(b,10))}})(jQuery);
;
/**
 * jQuery History Plugin (balupton edition) - Simple History Handler/Remote for Hash, State, Bookmarking, and Forward Back Buttons
 * Copyright (C) 2008-2009 Benjamin Arthur Lupton
 * http://www.balupton/projects/jquery_history/
 *
 * This file is part of jQuery History Plugin (balupton edition).
 * 
 * jQuery History Plugin (balupton edition) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * jQuery History Plugin (balupton edition) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with jQuery History Plugin (balupton edition).  If not, see <http://www.gnu.org/licenses/>.
 *
 * @name jqsmarty: jquery.history.js
 * @package jQuery History Plugin (balupton edition)
 * @version 1.0.1-final
 * @date July 11, 2009
 * @category jquery plugin
 * @author Benjamin "balupton" Lupton {@link http://www.balupton.com}
 * @copyright (c) 2008-2009 Benjamin Arthur Lupton {@link http://www.balupton.com}
 * @license GNU Affero General Public License - {@link http://www.gnu.org/licenses/agpl.html}
 * @example Visit {@link http://jquery.com/plugins/project/jquery_history_bal} for more information.
 * 
 * 
 * I would like to take this space to thank the following projects, blogs, articles and people:
 * - jQuery {@link http://jquery.com/}
 * - jQuery UI History - Klaus Hartl {@link http://www.stilbuero.de/jquery/ui_history/}
 * - Really Simple History - Brian Dillard and Brad Neuberg {@link http://code.google.com/p/reallysimplehistory/}
 * - jQuery History Plugin - Taku Sano (Mikage Sawatari) {@link http://www.mikage.to/jquery/jquery_history.html}
 * - jQuery History Remote Plugin - Klaus Hartl {@link http://stilbuero.de/jquery/history/}
 * - Content With Style: Fixing the back button and enabling bookmarking for ajax apps - Mike Stenhouse {@link http://www.contentwithstyle.co.uk/Articles/38/fixing-the-back-button-and-enabling-bookmarking-for-ajax-apps}
 * - Bookmarks and Back Buttons {@link http://ajax.howtosetup.info/options-and-efficiencies/bookmarks-and-back-buttons/}
 * - Ajax: How to handle bookmarks and back buttons - Brad Neuberg {@link http://dev.aol.com/ajax-handling-bookmarks-and-back-button}
 *
 **
 ***
 * CHANGELOG
 **
 * v1.0.1-final, July 11, 2009
 * - Restructured a little bit
 * - Documented
 * - Cleaned go/request
 *
 * v1.0.0-final, June 19, 2009
 * - Been stable for over a year now, pushing live.
 * 
 * v0.1.0-dev, July 24, 2008
 * - Initial Release
 * 
 */

// Start of our jQuery Plugin
(function($)
{	// Create our Plugin function, with $ as the argument (we pass the jQuery object over later)
	// More info: http://docs.jquery.com/Plugins/Authoring#Custom_Alias
	
	// Debug
	
	if (typeof console === 'undefined') {
		console = typeof window.console !== 'undefined' ? window.console : {};
	}
	console.log			= console.log 			|| function(){};
	console.debug		= console.debug 		|| console.log;
	console.warn		= console.warn			|| console.log;
	console.error		= console.error			|| function(){var args = [];for (var i = 0; i < arguments.length; i++) { args.push(arguments[i]); } alert(args.join("\n")); };
	console.trace		= console.trace			|| console.log;
	console.group		= console.group			|| console.log;
	console.groupEnd	= console.groupEnd		|| console.log;
	console.profile		= console.profile		|| console.log;
	console.profileEnd	= console.profileEnd	|| console.log;
	
	
	// Declare our class
	$.History = {
		// Our Plugin definition
		
		// -----------------
		// Options
		
		options: {
			debug: false
		},
		
		// -----------------
		// Variables
		
		state:		'',
		$window:	null,
		$iframe:	null,
		handlers:	{
			generic:	[],
			specific:	{}
		},
		
		// --------------------------------------------------
		// Functions
		
		/**
		 * Format a hash into a proper state
		 * @param {String} hash
		 */
		format: function ( hash ) {
			// Format the hash
			hash = hash.replace(/^.+?#/g,'').replace(/^#?\/?|\/?$/g, '');
			// Return the hash
			return hash;
		},
		
		/**
		 * Get the current state of the application
		 */
        getState: function ( ) {
			var History = $.History;
			// Get the current state
			return History.state;
        },
		/**
		 * Set the current state of the application
		 * @param {String} hash
		 */
		setState: function ( state ) {
			var History = $.History;
			// Format the state
			state = History.format(state)
			// Apply the state
			History.state = state;
			// Return the state
			return History.state;
		},
		
		/**
		 * Get the current hash of the browser
		 */
		getHash: function ( ) {
			var History = $.History;
			// Get hash
			if (parent && !$.browser.msie) {
				var hash = parent.window.location.hash;
			} else {
				var hash = window.location.hash || location.hash;
			}
			// Format the hash
			hash = History.format(hash);
			// Return the hash
			return hash;
		},
		/**
		 * Set the current hash of the browser
		 * @param {String} hash
		 */
		setHash: function ( hash ) {
			var History = $.History;
			// Prepare hash
			hash = $.History.format(hash);
			hash = hash.replace(/^\/?|\/?(\?)|\/?$/g, '/$1');
			
			// Write hash
			if ( typeof window.location.hash !== 'undefined' ) {
				//window.location.hash = hash;
			} else {
				location.hash = hash;
			}
			
			// Update IE<8 History
			if ( $.browser.msie && parseInt($.browser.version, 10) < 8 )
			{	// We are IE<8
				$.History.$iframe.contentWindow.document.open();
				$.History.$iframe.contentWindow.document.close();
				//$.History.$iframe.contentWindow.document.location.hash = $.History.getState();						
			}
			
		},
		
		/**
		 * Go to the specific state - does not force a history entry like setHash
		 * @param {String} state
		 */
		go: function ( state ) {
			var History = $.History;
			
			// Format the state
			state = History.format(state);
			
			// Get the current hash
			var hash = History.getHash();
			
			// Are they different?
			if ( hash !== state ) {
				// Yes, create a history entry
				History.setHash(state);
				// Wait for hashchange
			} else {
				// No change, but update state and fire
				History.setState(state);
				History.trigger();
			}
			
			// Done
			return true;
		},
		
		/**
		 * Fired when the hash is changed, either automaticly or manually
		 * @param {Event} e
		 */
		hashchange: function ( e ) {

			var History = $.History;
			
			// Debug
			if ( History.options.debug ) {
				console.debug('History.hashchange', this, arguments);
			}
			
			// Get Hash
			var hash = History.getHash();
			var state = History.getState();
			
			// Prevent IE 8 from fireing this twice
			if ( (!History.$iframe && state === hash) || (History.$iframe && History.hash === History.$iframe.contentWindow.document.location.hash) ) {
				// For some reason this works
				return false;
			}
			
			// Check
			if ( state === hash ) {
				// Nothing to do
				return false;
			}
			
			// Update the state with the new hash
			History.setState(hash);
			
			// Fire the handler
			History.trigger();
			
			// All done
			return true;
		},
		
		/**
		 * Bind a handler to a hash
		 * @param {Object} state
		 * @param {Object} handler
		 */
		bind: function ( state, handler ) {
			var History = $.History;
			// 
			if ( handler ) {
				// We have a state specific handler
				// Prepare
				if ( typeof History.handlers.specific[state] === 'undefined' )
				{	// Make it an array
					History.handlers.specific[state] = [];
				}
				// Push new handler
				History.handlers.specific[state].push(handler);
			}
			else {
				// We have a generic handler
				handler = state;
				History.handlers.generic.push(handler);
			}
			
			// Done
			return true;
		},
		
		/**
		 * Trigger a handler for a state
		 * @param {String} state
		 */
		trigger: function ( state ) {
			var History = $.History;
			
			// Prepare
			if ( typeof state === 'undefined' ) {
				// Use current
				state = History.getState();
			}
			var i, n, handler, list;
			
			// Fire specific
			if ( typeof History.handlers.specific[state] !== 'undefined' ) {
				// We have specific handlers
				list = History.handlers.specific[state];
				for ( i = 0, n = list.length; i < n; ++i ) {
					// Fire the specific handler
					handler = list[i];
					handler(state);
				}
			}
			
			// Fire generics
			list = History.handlers.generic;
			for ( i = 0, n = list.length; i < n; ++i ) {
				// Fire the specific handler
				handler = list[i];
				handler(state);
			}
			
			// Done
			return true;
		},
		
		// --------------------------------------------------
		// Constructors
		
		/**
		 * Construct our application
		 */
		construct: function ( ) {
			var History = $.History;
			
			// Modify the document
			$(document).ready(function() {
				// Prepare the document
				History.domReady();
			});
			
			// Done
			return true;
		},
		
		/**
		 * Configure our application
		 * @param {Object} options
		 */
		configure: function ( options ) {
			var History = $.History;
			
			// Set options
			History.options = $.extend(History.options, options);
			
			// Done
			return true;
		},
		
		domReadied: false,
		domReady: function ( ) {
			var History = $.History;
			
			// Runonce
			if ( History.domRedied ) {
				return;
			}
			History.domRedied = true;
			
			// Define window
			History.$window = $(window);
			
			// Apply the hashchange function
			History.$window.bind('hashchange', this.hashchange);
			
			// Force hashchange support for all browsers
			setTimeout(History.hashchangeLoader, 200);
			
			// All done
			return true;
		},
		
		/**
		 * Enable hashchange for all browsers
		 */
		hashchangeLoader: function () {
			var History = $.History;
			
			// More is needed for non IE8 browsers
			if ( !($.browser.msie && parseInt($.browser.version) >= 8) ) {	
				// We are not IE8
			
				// State our checker function, it is used to constantly check the location to detect a change
				var checker;
				
				// Handle depending on the browser
				if ( $.browser.msie ) {
					// We are still IE
				
					// Append and $iframe to the document, as $iframes are required for back and forward
					// Create a hidden $iframe for hash change tracking
					History.$iframe = $('<iframe id="jquery-history-iframe" style="display: none;"></$iframe>').prependTo(document.body)[0];
					
					// Create initial history entry
					History.$iframe.contentWindow.document.open();
					History.$iframe.contentWindow.document.close();
					
					// Check for initial state
					var hash = History.getHash();
					if ( hash ) {
						// Apply it to the iframe
						History.$iframe.contentWindow.document.location.hash = hash;
					}
					
					// Define the checker function (for bookmarks)
					checker = function ( ) {
						var iframeHash = History.format(History.$iframe.contentWindow.document.location.hash);
						if ( History.getState() !== iframeHash ) {
							// Back Button Change
							History.setHash(History.$iframe.contentWindow.document.location.hash);
						}
						var hash = History.getHash();
						if ( History.getState() !== hash ) {
							// The has has changed
							History.go(hash);
						}
					};
				}
				else {
					// We are not IE
				
					// Define the checker function (for bookmarks, back, forward)
					checker = function ( ) {
						var hash = History.getHash();
						if ( History.getState() !== hash ) {
							// The has has changed
							History.go(hash);
						}
					};
				}
				
				// Apply the checker function
				if ( !($.browser.msie && parseInt($.browser.version) < 8) ) {
					setInterval(checker, 200);
				} else {
					setInterval(checker, 1500);
				}
			}
			else {
				// We are IE8
				var hash = History.getHash();
				if (hash) {
					History.$window.trigger('hashchange');
				}
			}
			
			// Done
			return true;
		}
	
	}; // We have finished extending/defining our Plugin

	// --------------------------------------------------
	// Finish up
	
	// Instantiate
	$.History.construct();

// Finished definition

})(jQuery); // We are done with our plugin, so lets call it with jQuery as the argument
;
(function(a){var r=a.fn.domManip,d="_tmplitem",q=/^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,b={},f={},e,p={key:0,data:{}},h=0,c=0,l=[];function g(e,d,g,i){var c={data:i||(d?d.data:{}),_wrap:d?d._wrap:null,tmpl:null,parent:d||null,nodes:[],calls:u,nest:w,wrap:x,html:v,update:t};e&&a.extend(c,e,{nodes:[],parent:d});if(g){c.tmpl=g;c._ctnt=c._ctnt||c.tmpl(a,c);c.key=++h;(l.length?f:b)[h]=c}return c}a.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(f,d){a.fn[f]=function(n){var g=[],i=a(n),k,h,m,l,j=this.length===1&&this[0].parentNode;e=b||{};if(j&&j.nodeType===11&&j.childNodes.length===1&&i.length===1){i[d](this[0]);g=this}else{for(h=0,m=i.length;h<m;h++){c=h;k=(h>0?this.clone(true):this).get();a.fn[d].apply(a(i[h]),k);g=g.concat(k)}c=0;g=this.pushStack(g,f,i.selector)}l=e;e=null;a.tmpl.complete(l);return g}});a.fn.extend({tmpl:function(d,c,b){return a.tmpl(this[0],d,c,b)},tmplItem:function(){return a.tmplItem(this[0])},template:function(b){return a.template(b,this[0])},domManip:function(d,l,j){if(d[0]&&d[0].nodeType){var f=a.makeArray(arguments),g=d.length,i=0,h;while(i<g&&!(h=a.data(d[i++],"tmplItem")));if(g>1)f[0]=[a.makeArray(d)];if(h&&c)f[2]=function(b){a.tmpl.afterManip(this,b,j)};r.apply(this,f)}else r.apply(this,arguments);c=0;!e&&a.tmpl.complete(b);return this}});a.extend({tmpl:function(d,h,e,c){var j,k=!c;if(k){c=p;d=a.template[d]||a.template(null,d);f={}}else if(!d){d=c.tmpl;b[c.key]=c;c.nodes=[];c.wrapped&&n(c,c.wrapped);return a(i(c,null,c.tmpl(a,c)))}if(!d)return[];if(typeof h==="function")h=h.call(c||{});e&&e.wrapped&&n(e,e.wrapped);j=a.isArray(h)?a.map(h,function(a){return a?g(e,c,d,a):null}):[g(e,c,d,h)];return k?a(i(c,null,j)):j},tmplItem:function(b){var c;if(b instanceof a)b=b[0];while(b&&b.nodeType===1&&!(c=a.data(b,"tmplItem"))&&(b=b.parentNode));return c||p},template:function(c,b){if(b){if(typeof b==="string")b=o(b);else if(b instanceof a)b=b[0]||{};if(b.nodeType)b=a.data(b,"tmpl")||a.data(b,"tmpl",o(b.innerHTML));return typeof c==="string"?(a.template[c]=b):b}return c?typeof c!=="string"?a.template(null,c):a.template[c]||a.template(null,q.test(c)?c:a(c)):null},encode:function(a){return(""+a).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;")}});a.extend(a.tmpl,{tag:{tmpl:{_default:{$2:"null"},open:"if($notnull_1){_=_.concat($item.nest($1,$2));}"},wrap:{_default:{$2:"null"},open:"$item.calls(_,$1,$2);_=[];",close:"call=$item.calls();_=call._.concat($item.wrap(call,_));"},each:{_default:{$2:"$index, $value"},open:"if($notnull_1){$.each($1a,function($2){with(this){",close:"}});}"},"if":{open:"if(($notnull_1) && $1a){",close:"}"},"else":{_default:{$1:"true"},open:"}else if(($notnull_1) && $1a){"},html:{open:"if($notnull_1){_.push($1a);}"},"=":{_default:{$1:"$data"},open:"if($notnull_1){_.push($.encode($1a));}"},"!":{open:""}},complete:function(){b={}},afterManip:function(f,b,d){var e=b.nodeType===11?a.makeArray(b.childNodes):b.nodeType===1?[b]:[];d.call(f,b);m(e);c++}});function i(e,g,f){var b,c=f?a.map(f,function(a){return typeof a==="string"?e.key?a.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g,"$1 "+d+'="'+e.key+'" $2'):a:i(a,e,a._ctnt)}):e;if(g)return c;c=c.join("");c.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/,function(f,c,e,d){b=a(e).get();m(b);if(c)b=j(c).concat(b);if(d)b=b.concat(j(d))});return b?b:j(c)}function j(c){var b=document.createElement("div");b.innerHTML=c;return a.makeArray(b.childNodes)}function o(b){return new Function("jQuery","$item","var $=jQuery,call,_=[],$data=$item.data;with($data){_.push('"+a.trim(b).replace(/([\\'])/g,"\\$1").replace(/[\r\t\n]/g," ").replace(/\$\{([^\}]*)\}/g,"{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g,function(m,l,j,d,b,c,e){var i=a.tmpl.tag[j],h,f,g;if(!i)throw"Template command not found: "+j;h=i._default||[];if(c&&!/\w$/.test(b)){b+=c;c=""}if(b){b=k(b);e=e?","+k(e)+")":c?")":"";f=c?b.indexOf(".")>-1?b+c:"("+b+").call($item"+e:b;g=c?f:"(typeof("+b+")==='function'?("+b+").call($item):("+b+"))"}else g=f=h.$1||"null";d=k(d);return"');"+i[l?"close":"open"].split("$notnull_1").join(b?"typeof("+b+")!=='undefined' && ("+b+")!=null":"true").split("$1a").join(g).split("$1").join(f).split("$2").join(d?d.replace(/\s*([^\(]+)\s*(\((.*?)\))?/g,function(d,c,b,a){a=a?","+a+")":b?")":"";return a?"("+c+").call($item"+a:d}):h.$2||"")+"_.push('"})+"');}return _;")}function n(c,b){c._wrap=i(c,true,a.isArray(b)?b:[q.test(b)?b:a(b).html()]).join("")}function k(a){return a?a.replace(/\\'/g,"'").replace(/\\\\/g,"\\"):null}function s(b){var a=document.createElement("div");a.appendChild(b.cloneNode(true));return a.innerHTML}function m(o){var n="_"+c,k,j,l={},e,p,i;for(e=0,p=o.length;e<p;e++){if((k=o[e]).nodeType!==1)continue;j=k.getElementsByTagName("*");for(i=j.length-1;i>=0;i--)m(j[i]);m(k)}function m(j){var p,i=j,k,e,m;if(m=j.getAttribute(d)){while(i.parentNode&&(i=i.parentNode).nodeType===1&&!(p=i.getAttribute(d)));if(p!==m){i=i.parentNode?i.nodeType===11?0:i.getAttribute(d)||0:0;if(!(e=b[m])){e=f[m];e=g(e,b[i]||f[i],null,true);e.key=++h;b[h]=e}c&&o(m)}j.removeAttribute(d)}else if(c&&(e=a.data(j,"tmplItem"))){o(e.key);b[e.key]=e;i=a.data(j.parentNode,"tmplItem");i=i?i.key:0}if(e){k=e;while(k&&k.key!=i){k.nodes.push(j);k=k.parent}delete e._ctnt;delete e._wrap;a.data(j,"tmplItem",e)}function o(a){a=a+n;e=l[a]=l[a]||g(e,b[e.parent.key+n]||e.parent,null,true)}}}function u(a,d,c,b){if(!a)return l.pop();l.push({_:a,tmpl:d,item:this,data:c,options:b})}function w(d,c,b){return a.tmpl(a.template(d),c,b,this)}function x(b,d){var c=b.options||{};c.wrapped=d;return a.tmpl(a.template(b.tmpl),b.data,c,b.item)}function v(d,c){var b=this._wrap;return a.map(a(a.isArray(b)?b.join(""):b).filter(d||"*"),function(a){return c?a.innerText||a.textContent:a.outerHTML||s(a)})}function t(){var b=this.nodes;a.tmpl(null,null,null,this).insertBefore(b[0]);a(b).remove()}})(jQuery);
/*jslint browser: true */ /*global jQuery: true */

/**
 * jQuery Cookie plugin
 *
 * Copyright (c) 2010 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */

// TODO JsDoc

/**
 * Create a cookie with the given key and value and other optional parameters.
 *
 * @example $.cookie('the_cookie', 'the_value');
 * @desc Set the value of a cookie.
 * @example $.cookie('the_cookie', 'the_value', { expires: 7, path: '/', domain: 'jquery.com', secure: true });
 * @desc Create a cookie with all available options.
 * @example $.cookie('the_cookie', 'the_value');
 * @desc Create a session cookie.
 * @example $.cookie('the_cookie', null);
 * @desc Delete a cookie by passing null as value. Keep in mind that you have to use the same path and domain
 *       used when the cookie was set.
 *
 * @param String key The key of the cookie.
 * @param String value The value of the cookie.
 * @param Object options An object literal containing key/value pairs to provide optional cookie attributes.
 * @option Number|Date expires Either an integer specifying the expiration date from now on in days or a Date object.
 *                             If a negative value is specified (e.g. a date in the past), the cookie will be deleted.
 *                             If set to null or omitted, the cookie will be a session cookie and will not be retained
 *                             when the the browser exits.
 * @option String path The value of the path atribute of the cookie (default: path of page that created the cookie).
 * @option String domain The value of the domain attribute of the cookie (default: domain of page that created the cookie).
 * @option Boolean secure If true, the secure attribute of the cookie will be set and the cookie transmission will
 *                        require a secure protocol (like HTTPS).
 * @type undefined
 *
 * @name $.cookie
 * @cat Plugins/Cookie
 * @author Klaus Hartl/klaus.hartl@stilbuero.de
 */

/**
 * Get the value of a cookie with the given key.
 *
 * @example $.cookie('the_cookie');
 * @desc Get the value of a cookie.
 *
 * @param String key The key of the cookie.
 * @return The value of the cookie.
 * @type String
 *
 * @name $.cookie
 * @cat Plugins/Cookie
 * @author Klaus Hartl/klaus.hartl@stilbuero.de
 */
jQuery.cookie = function (key, value, options) {

    // key and value given, set cookie...
    if (arguments.length > 1 && (value === null || typeof value !== "object")) {
        options = jQuery.extend({}, options);

        if (value === null) {
            options.expires = -1;
        }

        if (typeof options.expires === 'number') {
            var days = options.expires, t = options.expires = new Date();
            t.setDate(t.getDate() + days);
        }

        return (document.cookie = [
            encodeURIComponent(key), '=',
            options.raw ? String(value) : encodeURIComponent(String(value)),
            options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
            options.path ? '; path=' + options.path : '',
            options.domain ? '; domain=' + options.domain : '',
            options.secure ? '; secure' : ''
        ].join(''));
    }

    // key and possibly options given, get cookie...
    options = value || {};
    var result, decode = options.raw ? function (s) { return s; } : decodeURIComponent;
    return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? decode(result[1]) : null;
};
;
if ($.ui) {
	$.wa = $.extend(true, $.wa, $.ui);
} else {
	$.wa = {};
}

$.wa = $.extend(true, $.wa, {
	data: {},
	get: function(key, defaultValue) {
		if (key == undefined) {
			return this.data;
		}
		return this.data[name] || defaultValue || null;
	},
	set: function(key, val) {
		if (key == undefined) {
			return this.data;
		}
		if (typeof(key) == 'object') {
			$.extend(this.data, key);
		} else {
			this.data[key] = value;
		}
		return this.data;
	},
	encodeHTML: function(html) {
		return html && (''+html).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
	},
	decodeHTML: function(html) {
		return html.replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;/g,'>');
	},
	setHash: function(hash){
		if (!(hash instanceof String) && hash.toString) {
			hash = hash.toString();
		}
		hash = hash.replace(/\/\//g, "/");
		hash = hash.replace(/^.*#/, '');
		if (parent && !$.browser.msie) {
			parent.window.location.hash = hash;
		} else {
			location.hash = hash;
		}
		return true;
	},
	back: function (hash) {
		if (history.length > 2) {
			if (typeof(hash)=='number' && parseInt(hash) == hash) {
				history.go(-hash);
			} else {
				history.go(-1);
			}
		} else if ($.browser.msie && history.length > 0) {
			history.back();
		} else if (hash) {
			this.setHash(hash);
		}
		return false;
	},
	toggleHashParam: function(param){
		var hash = location.hash;
		if (hash.search(param) == -1){
			this.addToHash(param);
		} else {
			this.removeFromHash(param);
		}
	},
	addToHash: function(param){
		var hash = location.hash;
		if (hash.search(param) == -1){
			hash+='/'+param+'/';
		}
		this.setHash(hash);
	},
	removeFromHash: function(param){
		var hash = location.hash;
		if (hash.search(param) > -1){
			hash = hash.replace(param, "");
		}
		this.setHash(hash);
	},

	setTitle: function (title) {
		document.title = title;
	},
	array_search: function ( needle, haystack, strict ) {
		var strict = !!strict;

		for(var key in haystack){
			if( (strict && haystack[key] === needle) || (!strict && haystack[key] == needle) ){
				return key;
			}
		}
		return false;
	},

	/** Create dialog with given id (or use existing) and set it up according to properties.
		p = {
			content: // content for the dialog to show immediately. Default is a loading image.
			buttons: // html for button area. Defaut is a single 'cancel' link.

			url: ..., // if specified, content will be loaded from given url
			post: { // used with url; contains post parameters.
				var: value
			},
			onload: null // function to call when content is loaded (only when url is specified)
		}
	  */
	dialogCreate: function(id, p) {
		p = $.extend({
				content: '<h1>Loading... <i class="icon16 loading"></i></h1>',
				buttons: null,
				url: null,
				post: null,
				small: false,
				onload: null,
				oncancel: null
			}, p);

		p.content = $(p.content);
		if (!p.buttons) {
			p.buttons = $('<input type="submit" class="button gray" value="'+$_('Cancel')+'">').click(function() {
				if (p.oncancel) {
					p.oncancel.call(dialog[0]);
				}
				$.wa.dialogHide();
			});
		} else {
			p.buttons = $(p.buttons);
		}

		var dialog = $('#'+id);
		if (dialog.size() <= 0) {
			dialog = $(
				'<div class="dialog" id="'+id+'" style="display: none">'+
					'<div class="dialog-background"></div>'+
					'<div class="dialog-window">'+
						'<div class="dialog-content">'+
							'<div class="dialog-content-indent">'+
								// content goes here
							'</div>'+
						'</div>'+
						'<div class="dialog-buttons">'+
							'<div class="dialog-buttons-gradient">'+
								// buttons go here
							'</div>'+
						'</div>'+
					'</div>'+
				'</div>'
			).appendTo('body');
		}

		dialog.find('.dialog-buttons-gradient').empty().append(p.buttons);
		dialog.find('.dialog-content-indent').empty().append(p.content);
		dialog.show();

		if (p.small) {
			dialog.addClass('small');
		} else {
			dialog.removeClass('small');
		}

		if (p.url) {
			var f_callback = function (response) {
				dialog.find('.dialog-content-indent').html(response);
				$.wa.waCenterDialog(dialog);
				if (p.onload) {
					p.onload.call(dialog[0]);
				}
			};
			if (p.post) {
				$.post(p.url, p.post, f_callback);
			} else {
				$.get(p.url, f_callback);
			}
		}

		this.waCenterDialog(dialog);

		// close on escape key
		var onEsc = function(e) {
			if (!dialog.is(':visible')) {
				return;
			}

			if (e && e.keyCode == 27) { // escape
				if (p.oncancel && typeof p.oncancel == 'function') {
					p.oncancel.call(dialog[0]);
				}
				$.wa.dialogHide();
				return;
			}

			$(document).one('keyup', onEsc);
		};
		onEsc();
		$(document).one('hashchange', $.wa.dialogHide);
		return dialog;
	},

	/** Center the dialog initially or when its properties changed significantly
	  * (e.g. when .small class applied or removed) */
	waCenterDialog: function(dialog) {
		dialog = $(dialog);

		// Have to adjust width and height via JS because of min-width and min-height properties.
		var wdw = dialog.find('.dialog-window');

		var dw = wdw.outerWidth(true);
		var dh = wdw.outerHeight(true);

		var ww = $(window).width();
		var wh = $(window).height();

		var w = (ww-dw)/2 / ww;
		var h = (wh-dh)/2 / wh;

		wdw.css({
			'left': Math.round(w*100)+'%',
			'top': Math.round(h*100)+'%'
		});
	},

	/** Hide all dialogs */
	dialogHide: function() {
		$('.dialog').hide();
		return false;
	},

	/** Close all .dropdown menus */
	dropdownsClose: function() {
		var dd = $('.dropdown:not(.disabled)');
		dd.addClass('disabled');
		setTimeout(function() {
			dd.removeClass('disabled');
		}, 600);
	},

	/** Enable automatic close of .dropdowns when user clicks on item inside one. */
	dropdownsCloseEnable: function() {
		$('.dropdown:not(.disabled)').live('click', this.dropdownsClickHandler);
	},

	/** Disable automatic close of .dropdowns when user clicks on item inside one. */
	dropdownsCloseDisable: function() {
		$('.dropdown:not(.disabled)').die('click', this.dropdownsClickHandler);
	},

	/** Click handler used in dropdownsCloseDisable() and dropdownsCloseEnable(). */
	dropdownsClickHandler: function(e) {
		var self = $(this);
		if (self.hasClass('no-click-close')) {
			return;
		}
		self.addClass('disabled');
		setTimeout(function() {
			self.removeClass('disabled');
		}, 600);
	},

	 /** Set default value for an input field. If field becomes empty, it receives specified css class
		* and default value. On field focus, css class and value are removed. On blur, if field
		* is still empty, css class and value are restored. */
	defaultInputValue: function(input, defValue, cssClass) {
		if (!(input instanceof jQuery)) {
			input = $(input);
		}

		var onBlur = function() {
			var v = input.val();
			if (!v || v == defValue) {
				input.val(defValue);
				input.addClass(cssClass);
			}
		};
		onBlur();
		input.blur(onBlur);
		input.focus(function() {
			if (input.hasClass(cssClass)) {
				input.removeClass(cssClass);
				input.val('');
			}
		});
	},
	util: {
		formatFileSize: function(bytes) {
			var i = -1;
			do {
				bytes = bytes / 1024;
				i++;
			} while (bytes > 99);

			return Math.max(bytes, 0.01).toFixed(2) + ((i >=0)? (' ' + $_(['kB', 'MB', 'GB', 'TB', 'PB', 'EB'][i])):'');
		}
	}
});

$(document).ajaxError(function(e, xhr, settings, exception) {
	// Generic error page
	if (xhr.status !== 200 && xhr.responseText) {
		if (!$.wa.errorHandler || $.wa.errorHandler(xhr)) {
			if (xhr.responseText.indexOf('Exception') != -1) {
				$.wa.dialogCreate('ajax-error', {'content': "<div>" + xhr.responseText + '</div>'});
				return;
			}

			document.open("text/html");
			document.write(xhr.responseText); // !!! throws an "Access denied" exception in IE9
			document.close();
			$(window).one('hashchange', function() {
				window.location.reload();
			});
		}
	}
	// Session timeout, show login page
	else if (xhr.getResponseHeader('wa-session-expired')) {
		window.location.reload();
	}
	// Show an exception in development mode
	else if (typeof xhr.responseText !== 'undefined' && xhr.responseText.indexOf('Exception') != -1) {
		$.wa.dialogCreate('ajax-error', {'content': "<div>" + xhr.responseText + '</div>'});
	}
});

$.ajaxSetup({'cache': false});

$(document).ajaxSend(function (event, xhr, settings) {
	if (settings.type == 'POST') {
		var matches = document.cookie.match(new RegExp("(?:^|; )_csrf=([^;]*)"));
		var csrf = matches ? decodeURIComponent(matches[1]) : '';
		if (settings.data === null ) {
			settings.data = '';
		}
		if (typeof(settings.data) == 'string') {
			if (settings.data.indexOf('_csrf=') == -1) {
				settings.data += (settings.data.length > 0 ? '&' : '') + '_csrf=' + csrf;
                xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
			}
		} else if (typeof(settings.data) == 'object') {
			settings.data['_csrf'] = csrf;
        }
	}
});

if (!Array.prototype.indexOf)
{
	Array.prototype.indexOf = function(elt /*, from*/)
	{
	var len = this.length;

	var from = Number(arguments[1]) || 0;
	from = (from < 0)
		 ? Math.ceil(from)
		 : Math.floor(from);
	if (from < 0){from += len;}

	for (; from < len; from++)
	{
		if (from in this &&
			this[from] === elt) {
			return from;
		}
	}
	return -1;
	};
}

/** Localization */

// strings set up by apps
$.wa.locale = $.wa.locale || {};

/** One parameter: translate a string.
  * Two parameters, int and string: translate and get correct word form to use with number. */
$_ = function(p1, p2) {
	// Two parameters: number and string?
	if (p2) {
		if (!$.wa.locale[p2]) {
			if (console){
				console.log('Localization failed: '+p2); // !!!
			}
			return p2;
		}
		if (typeof $.wa.locale[p2] == 'string') {
			return $.wa.locale[p2];
		}

		var d = Math.floor(p1 / 10) % 10,
			e = p1 % 10;
		if (d == 1 || e > 4 || e == 0) {
			return $.wa.locale[p2][2];
		}
		if (e == 1) {
			return $.wa.locale[p2][0];
		}
		return $.wa.locale[p2][1];
	}

	// Just one parameter: a string
	if ($.wa.locale[p1]) {
		return typeof $.wa.locale[p1] == 'string' ? $.wa.locale[p1] : $.wa.locale[p1][0];
	}

	if (console){
		console.log('Localization failed: '+p1); // !!!
	}
	return p1;
};

// EOF;
(function($) {

	$.ui.ddmanager['drop'] = function(draggable, event) {
		var dropped = false;
		$.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {
			if(!this.options) {
				return;
			}
			if (!this.options.disabled && this.visible && $.ui.intersect(draggable, this, this.options.tolerance)){dropped = this._drop.call(this, event);}

			if (!this.options.disabled && this.visible && this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {
				this.isout = 1; this.isover = 0;
				this._deactivate.call(this, event);
			}
		});
		return dropped;
	};

	$.wa.stickiescontroller = {
			debug: false,
			currentLayout: null,

			stickResizeTimer: {},
			stickResizeSign: {},
			stickFontSize: {},
			stickContentLength: {},
			stick:{},//zindex,x,y,etc
			maxZIndex: 0,
			stickZIndex: {},
			_border:{
				'height':18,
				'width':4
			},
			_margin:{
				'left':20,
				'top':20,
				'right':20,
				'bottom':20
			},
			_size:{
				'min_width':100,
				'min_height':100,

				'max_width':400,
				'max_height':400
			},

			options: {
                'default_background':''
			},

			init: function (options) {
				var self = this;
				if (typeof($.History) != "undefined"){

					$.History.bind(function (hash) {
						self.dispatch(hash);
					});
					var h = parent ? parent.window.location.hash : location.hash;
					var sheet_id = Math.max(0,parseInt($.cookie('stickies.current_sheet')));
					if (h.length < 2) {
						if(sheet_id>0){
							$.wa.setHash('#/sheet/'+sheet_id);
						}else{
							this.defaultAction();
						}
					} else {
						$.wa.setHash(h);
					}
				}

                if (default_background) {
                    self.options.default_background = default_background;
                }

				$("textarea.sticky-content").live('keyup change focus', function(event) {
					var id = parseInt($(this).attr('id').match(/\d+$/));
					if(id){
						self.updateZIndex(id);
						if(event.type!= 'focus'){

							var timestamp = $(this).attr('timestamp');
							if(!timestamp) {
								$(this).attr('timestamp',event.timeStamp);
								timestamp = event.timeStamp;
							}

							if ((event.type == 'change')||(event.timeStamp-timestamp)>10000) {//60 000 ms TODO make it option
								self.updateFontSize(id, true);
								self.stickyModifyAction({'content':$(this).val(),'id':id,'timestamp':event.timeStamp});
								$(this).attr('timestamp',event.timeStamp);
							} else if(self.stickContentLength[id]!=$(this).val().length) {
								self.updateFontSize(id,false);
								$('#sticky_status_'+id).removeClass('saved process').addClass('nosaved');
							}
						}
					} else {
						self.log('Invalid sticky id:',$(this).attr('id'));
					}
				});

				$('.js-form-submit').live('submit', function() {
					var hash = $(this).attr('action').replace(/^.*#\/?/, '');
					self.dispatch(hash);
					return false;
				});
				$('.js-form-submit input:reset').live('click', function() {
					var hash = $(this).attr('src').replace(/^.*#\/?/, '');
					self.dispatch(hash);
					return false;
				});

				$(".sticky").live('click', function(event) {
					var id = parseInt($(this).attr('id').match(/\d+$/));
					if(id){
						self.updateZIndex(id);
					} else {
						self.log('Invalid sticky id:',$(this).attr('id'));
					}
				});

				$(".js-menu-item").live('click', function() {
					var hash = $(this).attr('href').replace(/^.*#\/?/, '');
					if($(this).hasClass('js-menu-no-proceed')){
						self.dispatch(hash);
					} else {
						$.wa.setHash('#/'+hash);
					}
					return false;
				});

				$(".js-sheet-item").live('mouseover', function() {
					if ($('.stickies-settings-form:visible').size() == 0
						&& $('#wa-app-stickies-sheets').sortable('option', 'disabled') ) {
						$('#wa-app-stickies-sheets').sortable( "enable" );
					}
					return true;
				});

				$('div#stickies-sheets').droppable({
					accept:'.sticky',
					tolerance: 'pointer',
					scope: 'sheet',
					over: function(event, ui) {
						var dragg = $(ui.draggable);
						dragg.resizable( "destroy" ).find('div.sticky-inner').hide();
						if (dragg.find('.clone-head').size() == 0) {
							dragg.find('div.sticky-header').clone().addClass('clone-head').appendTo(ui.draggable);
						}
						else {
							dragg.find('.clone-head').show();
						}

						if (!dragg.data('isOut')) {
							var drag = dragg.data("draggable");
							drag.helperProportions = {
								width: dragg.find('.clone-head').width(),
								height: dragg.find('.clone-head').height()
							};
							drag._setContainment();

							dragg.data('isOver', true);
						}

					},
					out: function(event, ui) {
						var dragg = $(ui.draggable);
						if (dragg.find('.clone-head').size() != 0) {
							dragg.find('.clone-head').hide();

							if (dragg.data('isOut')) {
								var drag = dragg.data("draggable");
								drag.helperProportions = {
									width: dragg.width(),
									height: dragg.height()
								};
								drag._setContainment();
								dragg.data('isOver', null);
							}
						}

						dragg.find('div.sticky-inner').show();
						self.makeStickResizable(ui.draggable);
					},
					drop: function(event, ui)
					{
						return true;
					}
				});

				$('body').click(function(e){
					if ( $('.sticky').find(e.target).size() == 0 ) {
						self.updateZIndexAllBlur();
					}
				});

				$(window).unload( function () { self.checkChanges(); } );

				//prepare templates

				var pattern = /<\\\/(\w+)/g;
				var replace = '</$1';

				$("script[type$='x-jquery-tmpl']").each(function() {
					var id = $(this).attr('id').replace(/-template-js$/, '');
					try {
						var template = $(this).html().replace(pattern, replace);
						$.template(id, template);
					} catch (e) {
						if (typeof(console) == 'object') {
							console.log(e);
						}
					}
				});

			},

			dispatch: function (hash) {
				if (hash) {
					hash = hash.replace(/^.*#/, '');
					hash = hash.split('/');
					if (hash[0]) {
						var actionName = "";
						var attrMarker = hash.length;
						for (var i in hash) {
							var h = hash[i];
							if (i < 2) {
								if (i == 0){
									actionName = h;
								} else if(h.match(/[a-z]+/i)) {
									actionName += h.substr(0,1).toUpperCase() + h.substr(1);
								} else {
									attrMarker = i;
									break;
								}
							} else {
								attrMarker = i;
								break;
							}
						}
						var attr = hash.slice(attrMarker);
						this.execute(actionName, attr);

					} else {
						this.defaultAction();
					}
				} else {
					this.defaultAction();
				}
			},

			execute: function (actionName, attr) {
				this.trace('execute', [actionName,attr]);
				if (this[actionName + 'Action']) {
					this.currentAction = actionName;
					this.currentActionAttr = attr;
					this[actionName + 'Action'](attr);
				} else {
					this.log('Invalid action name:', actionName+'Action');
					$.wa.setHash('#');
					this.dispatch('#');
				}
			},

			checkChanges: function() {
				var self = this;
				$('.sticky-status.nosaved').each( function (i) {
					var id=parseInt($(this).attr('id').match(/\d+$/));
					self.trace('force save', id);
					$('#sticky_content_'+id).change();
				});
			},

			defaultAction: function () {
				this.sheetAction(-1);
			},

			sheetAddAction: function(params) {
				var self = this;
				this.sendRequest(
					'?module=sheet&action=add',
					null,
					function (data) {
						$.tmpl('sheet',{'sheet':data,'current_sheet_id':false}).insertBefore('#wa-app-stickies-sheets .top-padded');
						self.makeSticksTransferable($('#sheet_item_'+data.id));
						var sheet_id = data.id;
						$.wa.setHash('#/sheet/'+sheet_id);
					}
				);
			},

			sheetAction: function(params) {
				var url = '?module=sheet';
				var sheet_id = parseInt(params);
				var self = this;

				this.checkChanges();

				return this.sendRequest(
					url,
					{'sheet_id':sheet_id},
					function (data) {
						self.drawSheet(data);

						var date = new Date();
						date.setDate(date.getDate()+30);//30 days
						if(!data.current_sheet_id&&data.default_sheet_id){
							$.wa.setHash('#/sheet/'+data.default_sheet_id);
							$.cookie('stickies.current_sheet',data.default_sheet_id,{'expires':date});
						}else	if(data.current_sheet_id){
							$.cookie('stickies.current_sheet',data.current_sheet_id,{'expires':date});
						}
						if (data.current_sheet){$( 'title' ).html ( (data.current_sheet.name.split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;") || "&lt;"+'no name'.translate()+"&gt;") + " &mdash; " + accountName );}

						if (data.current_sheet_add) {
							self.sheetEditAction(data.current_sheet_id);
							$('.stickies-sidebar-scrolable').scrollTop(10000);
						}
					}
				);
			},
			sheetEditAction: function(params) {
				this.checkChanges();
				this.trace('sheetEditAction', params);
				$('#sheet_item_' + parseInt(params)+' .stickies-settings-form').toggle(0);

				if ($('#sheet_item_' + parseInt(params)+' .stickies-settings-form').is(':visible')) {
					$('#sheet_item_' + parseInt(params)).parent().sortable( "disable" );
				}
				else {
					$('#sheet_item_' + parseInt(params)).parent().sortable( "enable" );
				}
			},
			sheetBackgroundAction: function (params) {
				var id = parseInt(params[0]);
				var sheet_class = '';
				if(params[1]){
					sheet_class  = params[1];
				}
				$('#stickies').attr('class',sheet_class);
				$('#background-vars-'+id+' li.selected').removeClass('selected');
				$('#background-vars-'+id+'-'+sheet_class).addClass('selected');

			},
			sheetSaveAction: function(params) {
				var id = parseInt(params);
				var request_data = $('#sheet_item__settings_'+id).serializeArray();
				request_data.push({'sheet_id':id,'name':'background_id','value': $('#stickies').attr('class')});
				this.sendRequest(
					'?module=sheet&action=save',
					request_data,
					function (data) {
						$('#sheet_item_' + parseInt(params)+' .stickies-settings-form').toggle(0);
						if (data.name == '') {
							data.name = '&lt;'+'no name'.translate()+'&gt;';
						}
						$('#sheet_item_name_'+id).html(data.name.split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;"));
						$('title').html( data.name.split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;") + " &mdash; " + accountName );
					}
				);

			},
			sheetSortAction: function(id, after_id ,sheet) {
				var self = this;
				this.sendRequest(
					'?module=sheet&action=sort',
					{
						id: id,
						after_id: after_id
					},
					function (data) {
						self.trace('SortAction result', data);
						if(data.error) {
							self.error('Error occurred while sorting boards'.translate(), 'error');
							sheet.sortable('cancel');
						}
					},
					function (data) {
						self.log('SortAction cancel', {'data':data,'before':self.sheetsOrder,'after':params});
						sheet.sortable('cancel');
						self.error('Error occurred while sorting boards'.translate(), 'error');
						self.sheetAction(null);
					}
				);
			},
			sheetDeleteAction: function(params) {
				//check stickies count
				if(
						($('#wa-app-stickies-stickies div.sticky').length == 0)
						||(confirm('Delete board with all stickies?'.translate())==true)
					){
					var id = parseInt(params);
					var self = this;
					this.sendRequest(
						'?module=sheet&action=delete',
						{'sheet_id':id},
						function (data) {
							if(data.sheet_id){
								self.sheetAction(-1);
							}
						}

					);
				}
			},

			stickyModifyAction: function (param,callback) {
				var state_item = $('#sticky_'+param.id+' .sticky-status');
				state_item.removeClass('saved nosaved').addClass('process');
				if(param.content == undefined){
					param.content = $('#sticky_'+param.id+' :input[name=content]').val();//.stick_content
				}
				if(param.font_size == undefined){
					if ($('#sticky_'+param.id+' :input[name=content]').size() ){param.font_size = $('#sticky_'+param.id+' :input[name=content]').css('font-size').replace(/px/i, '');//.stick_content
}
				}
				this.sendRequest(
						'?module=sticky&action=modify',
						param,
						function () {
							state_item.removeClass('process nosaved').addClass('saved');
							state_item.text('');
							if(param.timestamp){
								$('#sticky_'+param.id+' .stick_content').attr('timestamp',param.timestamp);
							}

							if(typeof(callback) == 'function'){
								callback();
							}

						},
						function () {
							state_item.removeClass('process nosaved').addClass('nosaved');
							var message = 'Saving error'.translate();
							state_item.text(' '+message);
						}
				);
			},

			stickyAddAction: function (param) {
				var self = this;
				this.sendRequest(
					'?module=sticky&action=add',
					{'sheet_id':param[0]},
					function (data) {
						self.drawStick(data);
						self.makeStickDraggable("#sticky_"+data.id,{'width':data.size_width,'height':data.size_height});
						$("#sticky_"+data.id).find('textarea').focus();
					}
				);
			},

			stickySettingsAction: function (param) {
				var id = parseInt(param);
				if($('#sticky-settings-'+id).length) {
					this.hideStickSettings(id);
				} else {
					this.drawStickSettings(id);
				}
			},

			stickySizeAction: function (params) {
			},

			stickyColorAction: function (params) {
				var id = parseInt(params[0]);
				var color = params[1];
				var sticky_class = 'sticky';
				if(color){
					sticky_class += ' sticky-'+color;
				}
				$('#color-vars-'+id+' li.selected').removeClass('selected');
				$('#color-vars-'+id+'-'+color).addClass('selected');
				$('#sticky_'+id).attr('class',sticky_class);

				this.hideStickSettings(id);
				this.stickyModifyAction({'id':id,'color':color});
			},

			stickyDeleteAction: function (param) {
				var self = this;
				var id = parseInt(param);
				var request_data = {
					'id':id,
					'sheet_id':$('#sticky_'+id+' :input[name=sheet_id]').val()
				};
				this.sendRequest(
					'?module=sticky&action=delete',
					request_data,
					 function (data) {
						var id = parseInt(param[0]);
						var sticky = $('.stick-position-'+id);
						sticky.remove();
						self.stick[id] = null;
					}

				);
			},

			updateFontSize: function (id, allow_save, is_resize) {
				var mimics = [
				'paddingTop',
				'paddingRight',
				'paddingBottom',
				'paddingLeft',
				'fontSize',
				'fontFamily',
				'fontWeight'];

				var $textarea = $('#sticky_'+id+' .sticky-content:input[name=content]');
				var textareaContent = $textarea.val().replace(/&/g,'&amp;').replace(/  /g, '&nbsp;').replace(/<|>/g, '&gt;').replace(/\n/g, '<br />');
				if (textareaContent.length == 0) {
					return;
				}

				$twin = $textarea.parent().find('div.twin');
				if ($twin.length == 0) {
					$twin =	$('<div class="twin"/>').css({'position': 'absolute','word-wrap':'break-word', 'display': 'none', 'border': '1px solid #ccc'});
					var i = mimics.length;
					while(i--){
						$twin.css(mimics[i].toString(),$textarea.css(mimics[i].toString()));
					}
					$twin.appendTo($textarea.parent());
				}
				$twin.css('width', $textarea.width());


				var twinContent = $twin.html().replace(/<br>/ig,'<br />');

				$twin.html(textareaContent+'&nbsp;');

				var h = $textarea.height(),
					textarea_font = $textarea.css('font-size').replace(/px/i, '');

				if ( (!is_resize && (textareaContent+'&nbsp;' == twinContent))
					|| ($twin.height() < h && textarea_font >= 16)
					|| ($twin.height() > h && textarea_font <= 4)
					) {
					return;
				}

				for (var font = 4; font < 16; font += 1 ) {
					$twin.css('font-size',  font);
					if ($twin.height() > h) {
						font =  font - 1;
						$twin.css('font-size', font);
						break;
					}
				}
//				this.log('Current font size '+id,font);
				$textarea.css('font-size', font);
				this.trace('updateFontSize', font);
				$textarea.css('lineHeight', $twin.css('lineHeight'));

				return;
			},

			updateZIndex: function(id){
				var container = $('#sticky_'+id);
				var z_index = this.stickZIndex[id]||Math.max(1,parseInt(container.css('z-index')));
				if(z_index<this.maxZIndex){
					container.css('z-index',++this.maxZIndex);
					this.stickZIndex[id] = this.maxZIndex;
					$('div.sticky-inner.active').removeClass('active');
					$('#sticky_'+id+' div.sticky-inner').addClass('active');
				}

			},
			updateZIndexAllBlur: function(){
				$('div.sticky-inner.active').removeClass('active');
				this.maxZIndex++;
			},

			drawSheet: function (data) {

				$('#wa-app-stickies-sheets').empty();
				$('#wa-app-stickies-stickies').empty();
				$('#wa-app-stickies-add').empty();

				if(data.current_sheet){
					$('#stickies').attr('class',data.current_sheet.background_id||this.options.default_background);
					$.tmpl('add-sticky',{'sheet_id':data.current_sheet_id}).appendTo('#wa-app-stickies-add');
				}
				this.sheetsOrder = new Array();
				this.maxZIndex = 0;
				this.stickFontSize = new Array();
				this.stickContentLength = new Array();
				this.stick = null;
				this.stick = new Array();
				for(sheet_id in data.sheets){
					if (sheet_id != 'indexOf') {
						this.sheetsOrder.push(parseInt(data.sheets[sheet_id].id));
						$.tmpl('sheet',{'sheet':data.sheets[sheet_id],'current_sheet_id':data.current_sheet_id}).appendTo('#wa-app-stickies-sheets');
					}
				}
				$.tmpl('sheet-add',{}).appendTo('#wa-app-stickies-sheets');


				var stickies_cache = {};
				for(id in data.stickies){
					this.drawStick(data.stickies[id]);
					stickies_cache[data.stickies[id].id] = data.stickies[id];
				}

				this.makeSheetsSortable("#wa-app-stickies-sheets");

				this.makeSticksTransferable($("#wa-app-stickies-sheets .js-sheet-item").not('.selected'));

				//make stick draggable
				var self = this;
				$('div.sticky').each(function(i){
					var id = parseInt($(this).attr('id').match(/\d+$/));
					self.makeStickDraggable("#sticky_"+id,{'width':$(this).width(),'height':$(this).height()});
					if (!stickies_cache[id] || stickies_cache[id].font_size == 0) {
						if (stickies_cache[id].content.length != 0){self.updateFontSize(id,true);}
					}
				});
			},

			drawStick: function(data) {
				if (typeof data.id == 'undefined') {
					return;
				}

				var stick_id = data.id;
				this.stickZIndex[stick_id] = this.maxZIndex;

				if (!$('.stick-containment').length) {
					$contener1 = $('<div />').addClass('stick-containment').css({
						'position' : 'absolute',
						'display' : 'block',
						'left' : '20px',
						'top' : '20px',
						'right' : '20px',
						'bottom' : '20px'
//						'border' : '1px solid #ccc'
					}).appendTo('#wa-app-stickies-stickies');
				}
				else {
					$contener1 = $('.stick-containment');
				}

				$contener2 = $('<div />').addClass('stick-position-' + data['id']).css({
					'position' : 'absolute',
					'display' : 'block',
					'left' : '0',
					'top' : '0',
					'right' : data['size_width'] + 'px',
					'bottom' : data['size_height'] + 'px'
//					'border' : '1px solid #ccc'
				}).appendTo($contener1);

				data.position_left = data.position_left / 100;
				data.position_top = data.position_top / 100;
				$.tmpl('sticky',{'sticky':data,'zindex':++this.maxZIndex}).appendTo($contener2);

				return;
			},

			drawStickSettings: function(id) {
				var color = $('#sticky_'+id).attr('class').match(/sticky-(\w+)/);
				if(color) {
					color = color[1];
				} else {
					color = '';
				}
				var sticky =$('#sticky_'+id+' .sticky-content');
				var height =sticky.height();
				var width = sticky.width();
				var size = Math.max(height,width);
				$.tmpl('sticky-settings',{'sticky':{'id':id,'color':color,'size':size}}).appendTo('#sticky_'+id+' .sticky-inner');
				$('#sticky_'+id+' .sticky-content').hide('fast',function(){
					$('#sticky_'+id+' .sticky-inner').addClass('sticky-back');
					$('#sticky-settings-'+id).show().height(height).width(width);
				});
			},

			hideStickSettings: function(id)
			{
				var self = this;
				$('#sticky-settings-'+id).hide('fast',function(){
					$('#sticky_'+id+' .sticky-inner').removeClass('sticky-back');
					$('#sticky_'+id+' .sticky-content').show();
					$('#sticky-settings-'+id).remove();
					self.updateFontSize(id,false);
				});
			},

			makeSheetsSortable: function (selector) {
				var self = this;
				$(selector).sortable({
					'containment':'#stickies-events',
					'items':'li.js-sheet-item',
					'axis':'y',
					'distance':5,
					'containment':'parent',
					//'handle':'.wa-ui-helper-sortable',
					'cursor':'move',
					'start':function (event,ui) {
					},
					'update': function(event, ui) {
						var id = parseInt($(ui.item).attr('id').match(/\d+$/));
						var after_id = $(ui.item).prev().attr('id');
						if (after_id === undefined) {
							after_id = 0;
						}
						else {
							after_id = parseInt(after_id.match(/\d+$/));
						}
						self.sheetSortAction(id, after_id, $(this));
					}
				});
			},

			makeStickDraggable: function (selector,size) {
				var self = this;
				size = size||{'height':0,'width':0};
				$(selector).each(function(){
					$(this).draggable( {
						'start' : function(event,ui) {
							var id = parseInt($(this).attr('id').match(/\d+$/));
							$('#sticky_status_'+ id).removeClass('saved process').addClass('nosaved');
							self.updateZIndex(id);


						},
						'stop' : function (event,ui){
							//is exits draggable
							if ($(ui.helper).data('draggable')) {
								self.onStickDragableStop(event,ui,$(this));
							}
						},
						scroll: false,
						scope: 'sheet',
						'containment':'.stick-containment',
						'zindex': 10001,
						'cusrsor':'move',
						'handle':'div.sticky-header'
					});
				});
				//and resizable
				self.makeStickResizable(selector);
			},

			makeStickResizable: function(selector){
				var self = this;
				$(selector).resizable({
					maxHeight:	 this._size.max_height	+ this._border.height,
					maxWidth:	 this._size.max_width	+ this._border.width,
					minHeight:	 this._size.min_height	+ this._border.height,
					minWidth:	 this._size.min_width	+ this._border.width,
					ghost: true,
					stop:function (event,ui){
						var sticky_id = parseInt($(this).attr('id').match(/\d+$/));
						self.onResizeHandler(sticky_id, ui.size.width, ui.size.height);
					}
				});
			},

			makeSticksTransferable: function (selector) {
				var self = this;
				$(selector).droppable({
					accept:'.sticky',
					hoverClass: 'ui-state-active',
					tolerance: 'pointer',
					scope: 'sheet',
					drop: function(event, ui) {
						var sheet_id = parseInt($(this).attr('id').match(/\d+$/));
						var id= parseInt(ui.draggable.attr('id').match(/\d+$/));
						self.trace('drop', [id,event.target]);
						self.onStickDrop(id, sheet_id);
					}
				});
			},

			onStickDrop: function(id, sheet_id) {
				$('#sticky_'+id).draggable({ revert: true });
				this.stickyModifyAction(
					{'id':id,'sheet_id':sheet_id},
					function(data){
						$('#sticky_'+id).draggable('destroy');
						$('#sticky_'+id).remove();
						var counter = $('#sheet_item_'+sheet_id+' .count');
						counter.text(parseInt(counter.text())+1);
					},
					function(){
						$('#sticky_'+id).draggable('option','disabled',false);
					}
				);
			},

			onResizeHandler: function(id, width,height) {

				$('.stick-position-'+id).css({
					'right' : width + 'px',
					'bottom' : height + 'px'
				});

				var size	 = width;
				$('#size-vars-'+id+' li.selected').removeClass('selected');
				$('#size-vars-'+id+'-'+size).addClass('selected');
				$('#sticky_'+id).height(height).width(width);
				$('#sticky_'+id+' .sticky-content').height(height-this._border.height).width(width-this._border.width);
				$('#sticky-settings-'+id).height(height).width(width);

				var offset = this.stickCalculatePosition($('#sticky_'+id));
				var params = {
						'drag':true,
						'id':id,
						'size_width': width,
						'size_height': height,
						'position_left' : offset.left_procent * 100,
						'position_top' : offset.top_procent * 100
				};

				this.trace('resize',params);
				this.updateFontSize(id, false, true);

				this.updateZIndex(id);
				this.stickyModifyAction(params);
			},

			stickCalculatePosition: function(stick) {
				this.trace('stickCalculatePosition');
				var container = stick.parent(),
					left_procent = 100 * parseInt(stick.css('left')) / parseInt(container.width()),
					top_procent = 100 * parseInt(stick.css('top')) / parseInt(container.height());

				stick.css('left', left_procent+"%");
				stick.css('top', top_procent+"%");
				return {
					left_procent: left_procent,
					top_procent: top_procent
				};
			},

			onStickDragableStop: function(event, ui, item) {
				var id = parseInt(item.attr('id').match(/\d+$/));
				if (id){

					var stick = $(item);
					var offset = this.stickCalculatePosition(stick);

					var params = {
						'drag':true,
						'id':id,
						'position_left': offset.left_procent * 100,
						'position_top': offset.top_procent * 100
					};
					this.stickyModifyAction(params);
					return;

				} else {
					this.log('Invalid sticky id:',item.attr('id'));
				}
			},

			sendRequest: function(url,request_data,success_handler,error_handler) {
				var self = this;
				return $.ajax({
					'url':url,
					'data':request_data||{},
					'type':'POST',
					'success': function (data, textStatus, XMLHttpRequest) {
						try{
							data = $.parseJSON(data);
						}catch(e){
							self.log('Invalid server JSON responce', e);
							if(typeof(error_handler) == 'function'){
								error_handler();
							}
							self.error('Invalid server responce'.translate()+'<br>'+e, 'error');
						}
						if(data){
							switch(data.status){
								case 'fail':{
									self.error(data.errors.error||data.errors, 'error');
									if(typeof(error_handler) == 'function'){
										error_handler(data);
									}
									break;
								}
								case 'ok':{
									if(typeof(success_handler) == 'function'){
										success_handler(data.data);
									}
									break;
								}
								default: {
									self.log('unknown status responce', data.status);
									if(typeof(error_handler) == 'function'){
										error_handler(data);
									}
									break;
								}
							}
						}else{
							self.log('empty responce', textStatus);
							if(typeof(error_handler) == 'function'){
								error_handler();
							}
							self.error('Empty server responce'.translate(), 'warning');
						}

					},
					'error': function (XMLHttpRequest, textStatus, errorThrown) {
						self.log('AJAX request error', textStatus);
						if(typeof(error_handler) == 'function'){
							error_handler();
						}
						self.error('AJAX request error'.translate(), 'warning');
					}
				});
			},

			error: function (message,type) {
				var container = $('#wa-system-notice');
				if (container) {
					//TODO use correct message box
					var delay = 1500;
					switch(type){
						case 'error':{
							delay = 6000;
							message = '<i class="icon16 bug"></i>'+message;
							break;
						}
						case 'warning':{
							message = '<i class="icon16 no"></i>'+message;
							break;
						}
					}
					container.html(message);
					container.slideDown().delay(delay).slideUp();

				} else {
					alert(message);
				}

			},

			log: function (message, params) {
				if(console){
					console.log(message,params);
				}
			},
			trace: function (message, params) {
				if(console && this.debug){
					console.log(message,params);
				}
			}
	};
})(jQuery);
;
var translate = {};
String.prototype.translate = function() {
	return translate[this]?translate[this]:this;
};
;
